trigger:
  batch: true
  branches:
    include:
    - master
  paths:
    exclude:
    - .azure/*
    - .config/*
    - .github/*
    - __/*
    - doc/*
    - eng/*
    - test/*
    - CHANGELOG
    - README.md

strategy:
  matrix:
    linux:
      vmImage: 'ubuntu-latest'
      vmType: 'linux'
      DS: '/'
    mac:
      vmImage: 'macos-latest'
      vmType: 'macos'
      DS: '/'
    windows:
      vmImage: 'windows-latest'
      vmType: 'windows'
      DS: '\'

pool:
  vmImage: $(vmImage)

# Build numbering format -> $(Build.BuildNumber).
#name: $(Date:yyyyMMdd)$(Rev:.r)

variables:
  DOTNET_MULTILEVEL_LOOKUP: 1

  # Settings.
  packageSuffix: '$(Build.BuildNumber)+$(vmType)'

  artifactsPath: '$(Agent.TempDirectory)$(DS)nuget-packages$(DS)'
  localNuGetFeed: '$(Build.SourcesDirectory)$(DS)__$(DS)nuget-feed$(DS)'

  packProject: 'src$(DS)Abc.Maybe'
  packConfiguration: 'Release'

  cacheProject: 'test$(DS)NuGetCaching'

  testProject: 'test$(DS)Package'
  testConfiguration: 'Debug'

  # Misc ENV variables.
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_NOLOGO: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  NUGET_XMLDOC_MODE: 'skip'

steps:
  # Setup.
  - task: DotNetCoreCLI@2
    displayName: '.NET Version'
    inputs:
      command: custom
      custom: '--version'

  - task: UseDotNet@2
    # DISABLED
    enabled: false
    displayName: 'Setup'
    inputs:
      packageType: sdk
      useGlobalJson: true

  # Restore (pack).
  - task: CmdLine@2
    displayName: 'Restore (pack)'
    inputs:
      script: |
        dotnet restore $(packProject) -v:normal

  # Build (pack).
  - task: CmdLine@2
    displayName: 'Build (pack)'
    inputs:
      script: |
        dotnet build $(packProject) -c $(packConfiguration) --no-restore /p:PackageSuffix=$(packageSuffix) /p:Retail=true /p:IncludeSourceRevisionInInformationalVersion=true /p:PrintSettings=true

  # Pack.
  - task: CmdLine@2
    displayName: 'Pack'
    inputs:
      script: |
        dotnet pack $(packProject) -c $(packConfiguration) --no-build /p:PackageSuffix=$(packageSuffix) /p:Retail=true /p:IncludeSourceRevisionInInformationalVersion=true --output $(artifactsPath)

  # Publish artifact.
  - task: PublishPipelineArtifact@1
    displayName: 'Publish artifact'
    inputs:
      path: '$(artifactsPath)'
      artifactName: 'NuGet Packages for $(vmImage)'

  # Update local NuGet feed.
  - task: CmdLine@2
    displayName: 'Update local NuGet feed'
    inputs:
      script: |
        dotnet nuget push $(artifactsPath)*.nupkg -s $(localNuGetFeed)

  # Update local NuGet cache.
  - task: CmdLine@2
    displayName: 'Update local NuGet cache'
    inputs:
      script: |
        dotnet restore $(cacheProject) /p:AbcPackageSuffix=$(packageSuffix) -v:normal

  # Restore (test).
  - task: CmdLine@2
    displayName: 'Restore (test)'
    inputs:
      script: |
        dotnet restore $(testProject) /p:AbcPackageSuffix=$(packageSuffix) -v:normal

  # Build (test).
  - task: DotNetCoreCLI@2
    displayName: 'Build (test)'
    inputs:
      command: 'build'
      projects: '$(testProject)'
      arguments: '-c $(testConfiguration) --no-restore /p:AbcPackageSuffix=$(packageSuffix)'

  # Test.
  - task: DotNetCoreCLI@2
    displayName: 'Test'
    inputs:
      command: 'test'
      projects: '$(testProject)'
      arguments: '-c $(testConfiguration) --no-build /p:AbcPackageSuffix=$(packageSuffix)'
