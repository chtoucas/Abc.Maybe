trigger: none

pool:
  vmImage: 'windows-latest'

# TODO:
# - version
# - testing
# - update local NuGet feed -> should use dotnet push

# This is the default value, will be available as $(Build.BuildNumber).
name: $(Date:yyyyMMdd)$(Rev:.r)

variables:
  DOTNET_MULTILEVEL_LOOKUP: 1

  # Settings.
  versionPrefix: '9.9.9'
  versionSuffix: 'ci-AZP.$(Build.BuildNumber)'
  myVersion: '$(versionPrefix)-$(versionSuffix)'

  localFeed: '__\nuget-feed'

  packProject: 'src\Abc.Maybe'
  packConfiguration: 'Release'
  packNugetConfig: 'NuGet.config'
  packDirectory: '$(Agent.TempDirectory)\nuget-packages'

  cacheProject: 'test\NuGetCaching'

  testProject: 'test\Package'
  testConfiguration: 'Release'
  testNugetConfig: 'test\NuGet.config'

  # Misc ENV variables.
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_NOLOGO: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  NUGET_XMLDOC_MODE: 'skip'

steps:
  # Setup.
  - task: DotNetCoreCLI@2
    displayName: '.NET Version'
    inputs:
      command: custom
      custom: '--version'

  # Restore (pack).
  - task: DotNetCoreCLI@2
    displayName: 'Restore (pack)'
    inputs:
      command: 'restore'
      projects: '$(packProject)'
      arguments: '-c $(packConfiguration)'
      feedsToUse: config
      nugetConfigPath: '$(packNugetConfig)'
      verbosityRestore: 'minimal'

  # Build (pack).
  - task: DotNetCoreCLI@2
    displayName: 'Build (pack)'
    inputs:
      command: 'build'
      projects: '$(packProject)'
      arguments: '-c $(packConfiguration) --no-restore /p:VersionPrefix=$(versionPrefix) /p:VersionSuffix=$(versionSuffix) /p:Retail=true /p:EnableSourceLink=true /p:PrintSettings=true'

  # Pack.
  - task: DotNetCoreCLI@2
    displayName: 'Pack'
    inputs:
      command: 'pack'
      packagesToPack: '$(packProject)'
      configurationToPack: '$(packConfiguration)'
      verbosityPack: 'normal'
      packDirectory: '$(packDirectory)'
      versioningScheme: byEnvVar
      versionEnvVar: myVersion
      nobuild: true

  # Publish artifact.
  - task: PublishPipelineArtifact@1
    displayName: 'Publish artifact'
    inputs:
      path: '$(packDirectory)'
      artifactName: 'NuGet Packages'

  # Update local NuGet feed.
  - task: CopyFiles@2
    displayName: 'Update local feed'
    inputs:
      sourceFolder: '$(packDirectory)'
      targetFolder: '$(localFeed)'
      contents: '*.nupkg'

  # Update local NuGet cache.
  - task: DotNetCoreCLI@2
    displayName: 'Update local cache'
    inputs:
      command: 'restore'
      projects: '$(cacheProject)'
      arguments: '/p:AbcVersion=$(myVersion)'
      feedsToUse: config
      nugetConfigPath: '$(testNugetConfig)'
      verbosityRestore: 'minimal'

  # Restore (test).
  - task: DotNetCoreCLI@2
    displayName: 'Restore (test)'
    inputs:
      command: 'restore'
      projects: '$(testProject)'
      arguments: '-c $(testConfiguration) /p:AbcVersion=$(myVersion)'
      feedsToUse: config
      nugetConfigPath: '$(testNugetConfig)'
      verbosityRestore: 'minimal'

  # Build (test).
  - task: DotNetCoreCLI@2
    displayName: 'Build (test)'
    inputs:
      command: 'build'
      projects: '$(testProject)'
      arguments: '-c $(testConfiguration) --no-restore /p:AbcVersion=$(myVersion) /p:EnableSourceLink=false'

  # Test.
  - task: DotNetCoreCLI@2
    displayName: 'Test'
    inputs:
      command: 'test'
      projects: '$(testProject)'
      arguments: '-c $(testConfiguration) --no-build /p:AbcVersion=$(myVersion)'
