<Project>

  <PropertyGroup>
    <RepositoryRoot>$(MSBuildThisFileDirectory)</RepositoryRoot>
    <SourceRoot>$(RepositoryRoot)src\</SourceRoot>
  </PropertyGroup>

  <PropertyGroup>
    <RootNamespace>Abc</RootNamespace>
    <IsPackable>false</IsPackable>

    <LangVersion>latest</LangVersion>
    <CheckForOverflowUnderflow>true</CheckForOverflowUnderflow>
    <Nullable>enable</Nullable>

    <AssemblyOriginatorKeyFile>$(MSBuildThisFileDirectory)Abc.snk</AssemblyOriginatorKeyFile>

    <!-- Fake version -->
    <VersionPrefix>1.0.0</VersionPrefix>
    <VersionSuffix>DUMMY</VersionSuffix>
  </PropertyGroup>

  <!-- Warnings & errors -->
  <Choose>
    <When Condition=" $(Configuration) == 'Debug' ">
      <PropertyGroup>
        <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
        <TreatSpecificWarningsAsErrors />
      </PropertyGroup>
    </When>

    <Otherwise>
      <PropertyGroup>
        <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <!-- Assembly info & Package metadata -->
  <PropertyGroup>
    <Authors>Chtoucas</Authors>
    <Company>Narvalo.Org</Company>
    <Product>Abécédaire Library</Product>
    <Copyright>Copyright (c) 2019 Narvalo.Org</Copyright>

    <PackageProjectUrl>https://github.com/chtoucas/Abc.Maybe/</PackageProjectUrl>
    <PackageLicenseExpression>BSD-3-Clause</PackageLicenseExpression>
    <PackageReleaseNotes>See CHANGELOG in project root.</PackageReleaseNotes>

    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>https://github.com/chtoucas/Abc.Maybe/</RepositoryUrl>
  </PropertyGroup>

  <!-- Supported platforms & API profiles -->
  <PropertyGroup>
    <!--
      IMPORTANT: do NOT use MSBuild property resolution $() when a property is
      going to be parsed by a PowerShell script, which means everything except
      "MaxApiPlatform" and "LibraryPlatforms".

      For libraries, use
        <TargetFrameworks>$(LibraryPlatforms)</TargetFrameworks>
      otherwise use
        <TargetFramework>$(MaxApiPlatform)</TargetFramework>

      Remarks:
      - If/when we create an API depending on a new .NET Standard, "MaxApiPlatform"
        should be the last available platform supporting it. We can also update
        "MaxApiPlatform" just to benefit from the last improvements it could bring.
      - The first listed framework in "LibraryPlatforms" is the one used by the
        VS editor. Full NRT-analysis requires .NET Core 3.0 or above, .NET Standard
        does not include the nullable annotations (version 2.1 defines the nullable
        attributes but VS doesn't use them if I understand things correctly).
        We use the version 3.1 instead of 3.0 because the former is LTS and the
        latter is already EOL.
      - .NET Framework (Classic).
        "MinClassicPlatforms" lists the last minor version of each major version.
        "MaxClassicPlatforms" must contain "MinClassicPlatforms".
        https://support.microsoft.com/en-us/help/17455/lifecycle-faq-net-framework
      - .NET Core.
        "MinCorePlatforms" lists the LTS versions and the latest one if not LTS.
        "MaxCorePlatforms" must contain "MinCorePlatforms".
        https://dotnet.microsoft.com/platform/support/policy/dotnet-core
        https://github.com/dotnet/core/blob/master/microsoft-support.md
      - Dependencies:
        * Microsoft.Bcl.HashCode    requires .NET Framework >= 4.6.1
        * xunit.runner.visualstudio requires .NET Framework >= 4.5.2

        Should work with .NET Standard 1.2 (after we fix ApiProfileMoniker).
        https://dotnet.microsoft.com/platform/dotnet-standard#versions
    -->
    <MaxApiPlatform>netcoreapp3.1</MaxApiPlatform>
    <LibraryPlatforms>$(MaxApiPlatform);netstandard2.0</LibraryPlatforms>

    <SolutionPlatforms>netcoreapp3.1;netstandard2.1;netstandard2.0;netstandard1.2;net461;net452</SolutionPlatforms>
    <PackagePlatforms>netstandard2.1;netstandard2.0;net461;net452</PackagePlatforms>

    <MinClassicPlatforms>net48;net472;net462;net452</MinClassicPlatforms>
    <MaxClassicPlatforms>net48;net472;net471;net47;net462;net461;net46;net452</MaxClassicPlatforms>
    <MinCorePlatforms>netcoreapp3.1;netcoreapp2.1</MinCorePlatforms>
    <MaxCorePlatforms>netcoreapp3.1;netcoreapp3.0;netcoreapp2.2;netcoreapp2.1;netcoreapp2.0</MaxCorePlatforms>

    <!-- FIXME: Abc.Tests and eng\build.ps1 /p:PrintSettings=true
      See "SolutionPlatforms" and "PackagePlatforms".
      Profile 2.1: "netstandard2.1" and "netcoreapp3.1" ie "MaxApiPlatform".
      Profile 2.0 (default): everything else.

      D.B.targets is not the right place to define "ApiProfileMoniker" as we
      need it in Abc.Maybe.csproj to define the PublicAPI files.
      The only other place where we need it is D.B.targets, for API_PROFILE_21.
    -->
    <ApiProfileMoniker>netstandard2.0</ApiProfileMoniker>
    <ApiProfileMoniker Condition=" $(TargetFramework) == 'netstandard2.1' ">netstandard2.1</ApiProfileMoniker>
    <ApiProfileMoniker Condition=" $(TargetFramework) == $(MaxApiPlatform) ">netstandard2.1</ApiProfileMoniker>
  </PropertyGroup>

</Project>
