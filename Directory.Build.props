<Project>

  <PropertyGroup>
    <RepositoryRoot>$(MSBuildThisFileDirectory)</RepositoryRoot>
    <SourceRoot>$(RepositoryRoot)src\</SourceRoot>
  </PropertyGroup>

  <!-- Common settings -->
  <PropertyGroup>
    <RootNamespace>Abc</RootNamespace>
    <IsPackable>false</IsPackable>

    <LangVersion>latest</LangVersion>
    <CheckForOverflowUnderflow>true</CheckForOverflowUnderflow>
    <Nullable>enable</Nullable>

    <AssemblyOriginatorKeyFile>$(MSBuildThisFileDirectory)Abc.snk</AssemblyOriginatorKeyFile>

    <VersionPrefix>0.0.1</VersionPrefix>
    <VersionSuffix>DUMMY</VersionSuffix>
  </PropertyGroup>

  <!-- Warnings & errors -->
  <Choose>
    <When Condition=" $(Configuration) == 'Debug' ">
      <PropertyGroup>
        <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
        <TreatSpecificWarningsAsErrors />
      </PropertyGroup>
    </When>

    <Otherwise>
      <PropertyGroup>
        <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <!-- Assembly info & Package metadata -->
  <PropertyGroup>
    <Authors>Chtoucas</Authors>
    <Company>Narvalo.Org</Company>
    <Product>Abécédaire Library</Product>
    <Copyright>Copyright (c) 2019 Narvalo.Org</Copyright>

    <PackageProjectUrl>https://github.com/chtoucas/Abc.Maybe/</PackageProjectUrl>
    <PackageLicenseExpression>BSD-3-Clause</PackageLicenseExpression>
    <PackageReleaseNotes>See CHANGELOG in project root.</PackageReleaseNotes>

    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>https://github.com/chtoucas/Abc.Maybe/</RepositoryUrl>
  </PropertyGroup>

  <!-- Supported platforms -->
  <PropertyGroup>
    <!--
      For libraries or test projects, use
        <TargetFrameworks>$(LibraryPlatforms)</TargetFrameworks>
      For exe, use
        <TargetFramework>$(MaxPlatform)</TargetFramework>
      Do not use "TargetFramework" (no "s"), otherwise testing multi-targets
      at once won't work.

      Building the solution should work fine for
      - .NET Standard   1.1 - 2.1
      - .NET Core       2.0 - 3.1
      - .NET Framework  4.5 - 4.8
      Running the test suite is NOT possible w/ .NET Framework 4.5 / 4.5.1
      (Xunit restriction) and, of course, .NET Standard.

      The solution has very few external dependencies and are only related to
      testing (see projects Abc.Testing and Abc.Tests).

      Remarks:
      - If/when we create an API depending on a new .NET Standard, "MaxPlatform"
        should be the last available platform supporting it. We can also update
        "MaxPlatform" just to benefit from the last improvements it could bring.
      - The first listed framework in "LibraryPlatforms" is the one used by the
        VS editor. Full NRT-analysis requires .NET Core 3.0 or above, .NET Standard
        does not include the nullable annotations (version 2.1 defines the nullable
        attributes but VS doesn't use them if I understand things correctly).
        We use the version 3.1 instead of 3.0 because the former is LTS and the
        latter is already EOL.
      - "LibraryPlatforms" contains one platform per API profile (see D.B.targets).
      - Platforms grouped by dotnet tasks.
        Do NOT add .NET Standard 1.0, v1.1 has everything we need but with
        a much simpler dependency graph.
      - .NET Framework (Classic).
        "MinClassicPlatforms" lists the last minor version of each major version.
        "MaxClassicPlatforms" must contain "MinClassicPlatforms".
      - .NET Core.
        "MinCorePlatforms" lists the LTS versions and the latest one if not LTS.
        "MaxCorePlatforms" must contain "MinCorePlatforms".

      References
      - .NET Standard versions.
        https://dotnet.microsoft.com/platform/dotnet-standard#versions
        https://github.com/dotnet/standard/blob/master/docs/versions.md
      - Target frameworks
        https://docs.microsoft.com/en-us/dotnet/standard/frameworks
      - .NET Framework lifecycle.
        https://support.microsoft.com/en-us/help/17455/lifecycle-faq-net-framework
      - .NET Core lifecycle.
        https://dotnet.microsoft.com/platform/support/policy/dotnet-core
        https://github.com/dotnet/core/blob/master/microsoft-support.md
      - Useful docs.
        https://docs.microsoft.com/en-us/dotnet/standard/library-guidance/cross-platform-targeting
        https://docs.microsoft.com/en-us/dotnet/core/tutorials/libraries
        https://docs.microsoft.com/en-us/dotnet/core/packages
    -->
    <MaxPlatform>netcoreapp3.1</MaxPlatform>
    <LibraryPlatforms>$(MaxPlatform);netstandard2.0</LibraryPlatforms>

    <!--
      IMPORTANT: below, do NOT use MSBuild property resolution $(), the content
      must be in a form understandable to PowerShell.
    -->

    <BuildPlatforms>
      netstandard2.1;netstandard1.1;
      netcoreapp3.1;netcoreapp2.0;
      net48;net45
    </BuildPlatforms>
    <TestPlatforms>
      netcoreapp3.1;netcoreapp2.0;
      net48;net452
    </TestPlatforms>
    <PackPlatforms>
      netstandard2.1;netstandard2.0;netstandard1.1;
      net461;net452
    </PackPlatforms>

    <MinClassicPlatforms>net48;net472;net462;net452</MinClassicPlatforms>
    <MaxClassicPlatforms>
      net48;
      net472;net471;net47;
      net462;net461;net46;
      net452;net451;net45
    </MaxClassicPlatforms>

    <MinCorePlatforms>netcoreapp3.1;netcoreapp2.1</MinCorePlatforms>
    <MaxCorePlatforms>
      netcoreapp3.1;netcoreapp3.0;
      netcoreapp2.2;netcoreapp2.1;netcoreapp2.0
    </MaxCorePlatforms>
  </PropertyGroup>

</Project>
