<Project>

  <!-- Global contexts -->
  <PropertyGroup>
    <ContinuousIntegrationBuild Condition=" '$(ContinuousIntegrationBuild)' == '' ">false</ContinuousIntegrationBuild>
    <ContinuousIntegrationBuild Condition=" '$(TF_BUILD)' == 'true' ">true</ContinuousIntegrationBuild>
    <ContinuousIntegrationBuild Condition=" '$(GITHUB_ACTIONS)' == 'true' ">true</ContinuousIntegrationBuild>

    <!-- WARNING: inside Visual Studio, SlimBuild is set to true -->
    <SlimBuild Condition=" '$(SlimBuild)' == '' ">false</SlimBuild>
    <SlimBuild Condition=" '$(SLIM_BUILD)' == 'true' ">true</SlimBuild>
    <SlimBuild Condition=" '$(BuildingInsideVisualStudio)' == 'true' ">true</SlimBuild>
  </PropertyGroup>

  <!-- Repository layout -->
  <PropertyGroup>
    <MyRepositoryRoot>$(MSBuildThisFileDirectory)</MyRepositoryRoot>
    <MySourceRoot>$(MyRepositoryRoot)src\</MySourceRoot>
    <MyArtifactsRoot>$(MyRepositoryRoot)__\</MyArtifactsRoot>
  </PropertyGroup>

  <!-- Common settings -->
  <PropertyGroup>
    <RootNamespace>Abc</RootNamespace>

    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>

    <AssemblyOriginatorKeyFile>$(MSBuildThisFileDirectory)Abc.snk</AssemblyOriginatorKeyFile>

    <Authors>Chtoucas</Authors>
    <Company>Narvalo.Org</Company>
    <Product>Abécédaire Library</Product>
    <Copyright>Copyright (c) 2019 Narvalo.Org</Copyright>

    <!-- Fake version -->
    <VersionPrefix>0.0.0</VersionPrefix>
    <VersionSuffix>DUMMY</VersionSuffix>

    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>https://github.com/chtoucas/Abc.Maybe/</RepositoryUrl>

    <IsPackable>false</IsPackable>
    <PackageProjectUrl>$(RepositoryUrl)</PackageProjectUrl>
    <PackageLicenseExpression>BSD-3-Clause</PackageLicenseExpression>
    <PackageReleaseNotes>See CHANGELOG in project root.</PackageReleaseNotes>
  </PropertyGroup>

  <!-- Release versus the other configurations (Debug) -->
  <Choose>
    <When Condition=" '$(Configuration)' == 'Release' ">
      <PropertyGroup>
        <SignAssembly>true</SignAssembly>
        <CheckForOverflowUnderflow>false</CheckForOverflowUnderflow>

        <!-- Local setting that allows Abc.Testing to access the internals of Abc.Maybe -->
        <VisibleInternals>false</VisibleInternals>

        <!-- All warnings are turned into errors, except for CS1591 (XML comments) -->
        <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
        <WarningsNotAsErrors>$(WarningsNotAsErrors);CS1591</WarningsNotAsErrors>
      </PropertyGroup>
    </When>

    <Otherwise>
      <PropertyGroup>
        <SignAssembly>false</SignAssembly>
        <CheckForOverflowUnderflow>true</CheckForOverflowUnderflow>

        <VisibleInternals>true</VisibleInternals>

        <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
        <TreatSpecificWarningsAsErrors />
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <!-- Warnings -->
  <PropertyGroup>
    <!--
      CA1034  Nested types should not be visible (Design)
      CA1303  Do not pass literals as localized parameters (Globalization)
      CA1707  Identifiers should not contain underscores (Naming)
      CA2007  Consider calling ConfigureAwait on the awaited task (Reliability)
    -->
    <MyNoWarnForTestProject>CA1034;CA1303;CA1707;CA2007</MyNoWarnForTestProject>
  </PropertyGroup>

  <!-- Compiler symbols -->
  <PropertyGroup>
    <DefineConstants Condition=" '$(DefineConstants)' != '' ">$(DefineConstants);CONTRACTS_FULL</DefineConstants>
    <DefineConstants Condition=" '$(DefineConstants)' == '' ">CONTRACTS_FULL</DefineConstants>

    <DefineConstants>$(DefineConstants);INTERNAL_NULLABLE_ATTRIBUTES</DefineConstants>

    <DefineConstants Condition=" '$(SignAssembly)' == 'true' ">$(DefineConstants);SIGNED_ASSEMBLY</DefineConstants>
    <DefineConstants Condition=" '$(CheckForOverflowUnderflow)' != 'true' ">$(DefineConstants);UNCHECKED</DefineConstants>
  </PropertyGroup>

  <!-- Target frameworks -->
  <PropertyGroup>
    <!-- IMPORTANT: keep "MyDefaultFramework" in sync with "global.json" -->
    <MyDefaultFramework>net5.0</MyDefaultFramework>
    <MySupportedStandards>netstandard2.1;netstandard2.0;netstandard1.1</MySupportedStandards>
  </PropertyGroup>

  <Choose>
    <When Condition=" '$(SlimBuild)' == 'true' ">
      <PropertyGroup>
        <MyLibraryFrameworks>$(MyDefaultFramework);netstandard2.0</MyLibraryFrameworks>
        <MyTestFrameworks>$(MyDefaultFramework)</MyTestFrameworks>
      </PropertyGroup>
    </When>

    <Otherwise>
      <PropertyGroup>
        <MyLibraryFrameworks>$(MySupportedStandards);net461</MyLibraryFrameworks>
        <MyTestFrameworks>netcoreapp3.1;netcoreapp2.1</MyTestFrameworks>
        <MyTestFrameworks Condition=" '$(OS)' == 'Windows_NT' ">$(MyTestFrameworks);net461;net452</MyTestFrameworks>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <!-- Supported frameworks -->
  <PropertyGroup>
    <!--
      IMPORTANT: do NOT use MSBuild property resolution $() below, the content
      must be in a form understandable to PowerShell.
      One might have to filter these lists if the underlying OS does not support
      some targets (see "test\Package\Abc.PackageTests.csproj").
      These properties are NOT used by any project located in the directory "src".
    -->

    <MyMinCoreFrameworks>net5.0;netcoreapp3.1;netcoreapp2.1</MyMinCoreFrameworks>
    <MyMaxCoreFrameworks>
      net5.0;
      netcoreapp3.1;netcoreapp3.0;
      netcoreapp2.2;netcoreapp2.1
    </MyMaxCoreFrameworks>

    <MyMinClassicFrameworks>net48;net472;net462;net452</MyMinClassicFrameworks>
    <MyMaxClassicFrameworks>
      net48;
      net472;net471;net47;
      net462;net461;net46;
      net452
    </MyMaxClassicFrameworks>

    <MyNotSupportedTestFrameworks>
      netcoreapp2.0;
      net451;net45
    </MyNotSupportedTestFrameworks>
  </PropertyGroup>

</Project>
