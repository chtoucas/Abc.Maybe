README
------

The actual test project is not here but in "src" and is called Abc.Tests.

Projects here are really meant to work with "eng\post-check.ps1".

Of course, one can still use the dotnet command-line directly:
  > dotnet build NETSdk
  > dotnet build NETSdk /p:__Max=true
  > dotnet test NETSdk -f net48
Beware, this won't work with the projects NET45 and NET451 which use pre-SDK
project files.

At any time, we can see the versions in use:
  > dotnet list NETSdk package --framework net48
We can also look for outdated packages
  > dotnet list NETSdk package --framework net48 --outdated --include-prerelease
We used net48, but any other would do the job.

## Default version or a specific one.

Default version (the one listed in Directory.Build.props).
  > dotnet restore NETSdk -v n
  > dotnet build NETSdk
  > dotnet build NETSdk -f net48
At any time, we can see the versions in use:
  > dotnet list NETSdk package --framework net48

Restore accepts params /p: and -v,
  > dotnet restore NETSdk -v n /p:__Max=true
  > dotnet restore NETSdk -v n /p:AbcVersion=1.0.0-edge.24241460
  > dotnet restore NETSdk -v n /p:__Max=true /p:AbcVersion=1.0.0-edge.24241460
Build accepts params /p: (net46 requires __Max, -v is available but too verbose),
  > dotnet build NETSdk /p:__Max=true
  > dotnet build NETSdk /p:__Max=true -f net46
  > dotnet build NETSdk /p:__Max=true -f net46 /p:AbcVersion=1.0.0-edge.24241460
List package does NOT accept params /p: and -v.

## Restore/build traps.

We can restore w/ a specific version in mind, but if the next build does not
specify a version, it will revert to the default version. If we wish to use the
last restored version we must use the option --no-restore.
- If we restore without /p:AbcVersion
  > dotnet restore NETSdk -v n
  > dotnet list NETSdk package --framework net48
  NETSdk uses the default version (no surprise).
- If we restore with /p:AbcVersion
  > dotnet restore NETSdk -v n /p:AbcVersion=1.0.0-edge.24241460
  > dotnet list NETSdk package --framework net48
  NETSdk uses version 1.0.0-edge.24241460 (no surprise).
- If we build without /p:AbcVersion
  > dotnet build NETSdk -f net48
  > dotnet list NETSdk package --framework net48
  **NETSdk is back to the _default_ version**
- If we restore with /p:AbcVersion
  > dotnet build NETSdk -f net48 /p:AbcVersion=1.0.0-edge.24241460
  > dotnet list NETSdk package --framework net48
  NETSdk uses version 1.0.0-edge.24241460.
- If we build without /p:AbcVersion BUT with --no-restore
  > dotnet build NETSdk -f net48 --no-restore
  > dotnet list NETSdk package --framework net48
  NETSdk uses the last restored version: 1.0.0-edge.24241460.
