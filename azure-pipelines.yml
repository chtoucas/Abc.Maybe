
trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - .github/*
    - __/*
    - doc/*
    - eng/*
    - test/*
    - CHANGELOG
    - LICENSE*
    - README.md

pool:
  vmImage: 'windows-latest'

variables:
  mainSolution: 'Maybe.sln'
  buildConfiguration: 'Release'
  nugetConfig: 'NuGet.config'
  # ENV variables to speed up things a bit.
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  NUGET_XMLDOC_MODE: 'skip'

steps:
  # Initialize environment.
  - task: DotNetCoreCLI@2
    displayName: 'Print .NET version'
    inputs:
      command: custom
      custom: '--info'

  - task: UseDotNet@2
    displayName: 'Use global.json'
    inputs:
      packageType: sdk
      useGlobalJson: true

  - task: DotNetCoreCLI@2
    displayName: 'Print .NET version'
    inputs:
      command: custom
      custom: '--info'

  # Restore.
  - task: DotNetCoreCLI@2
    displayName: 'Restore'
    inputs:
      command: 'restore'
      projects: '$(mainSolution)'
      feedsToUse: config
      nugetConfigPath: '$(nugetConfig)'
      verbosityRestore: 'normal'

  # Build.
  - task: DotNetCoreCLI@2
    displayName: 'Build'
    inputs:
      command: 'build'
      projects: '$(mainSolution)'
      arguments: '-c $(buildConfiguration) --no-restore /p:PrintSettings=true'

  # Test + Code Coverage.
  - task: DotNetCoreCLI@2
    displayName: 'Test'
    inputs:
      command: 'test'
      projects: 'src/Abc.Tests/Abc.Tests.csproj'
      arguments: '-c $(buildConfiguration) --collect:"XPlat Code Coverage" --settings coverlet.runsettings'
      nobuild: true

  # Process then publish CC report.
  - task: Palmmedia.reportgenerator.reportgenerator-build-release-task.reportgenerator@4
    displayName: 'Process CC'
    inputs:
      reports: '$(Agent.TempDirectory)/**/coverage.cobertura.xml'
      targetdir: '$(Agent.TempDirectory)'
      reporttypes: 'Cobertura'

  - task: PublishCodeCoverageResults@1
    displayName: 'Publish CC'
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(Agent.TempDirectory)/Cobertura.xml'

  # Build ALL.
  - task: PowerShell@2
    displayName: 'Build ALL'
    inputs:
      filePath: 'ci.ps1'
      arguments: '-c $(buildConfiguration)'
