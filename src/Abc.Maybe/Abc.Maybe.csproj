<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>$(LibraryPlatforms)</TargetFrameworks>
    <IsPackable>true</IsPackable>

    <!-- Only used to ease moving code from here to Sketches and vice versa -->
    <DefineConstants>$(DefineConstants);VISIBLE_INTERNALS</DefineConstants>
  </PropertyGroup>

  <!-- Debug/Release -->
  <Choose>
    <When Condition=" $(Configuration) == 'Debug' ">
      <PropertyGroup>
        <!--
          RS0016  Symbol XXX is not part of the declared API
          RS0017  Symbol XXX is part of the declared API, but is either not public
                  or could not be found
        -->
        <NoWarn>$(NoWarn);RS0016;RS0017</NoWarn>
      </PropertyGroup>
    </When>

    <Otherwise>
      <PropertyGroup>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <!--
        <WarningsNotAsErrors>$(WarningsNotAsErrors);CS1591</WarningsNotAsErrors>
        <NoWarnCS1591>false</NoWarnCS1591>
        -->
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.PublicApiAnalyzers" Version="3.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <!-- DebugType -->
  <!--
    For Windows-only platforms, we use the legacy PDB format, otherwise we stick
    to the new "portable" format.
    I had trouble with this one, setting "DebugType" in D.B.targets had no
    effect whatsoever, so I had to initialise it here, but it appears to have
    been fixed by Microsoft.
    References
    - https://github.com/Microsoft/msbuild/issues/2754
    - https://github.com/dotnet/core/blob/master/Documentation/diagnostics/portable_pdb.md
    - https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/compiler-options/debug-compiler-option
    - https://docs.microsoft.com/en-us/dotnet/framework/debug-trace-profile/making-an-image-easier-to-debug
    Below, we cannot use "TargetFrameworkIdentifier", it has not yet been set.
  <PropertyGroup Condition=" $(Retail) == 'true' ">
    <DebugType Condition=" $(TargetFramework.StartsWith('net4')) ">pdbonly</DebugType>
  </PropertyGroup>
  -->
</Project>
