<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>$(LibraryPlatforms)</TargetFrameworks>
    <IsPackable>true</IsPackable>
  </PropertyGroup>

  <Choose>
    <When Condition=" $(Configuration) == 'Debug' ">
      <PropertyGroup>
        <!--
          RS0016  Symbol XXX is not part of the declared API
          RS0017  Symbol XXX is part of the declared API, but is either not public
                  or could not be found
        -->
        <NoWarn>$(NoWarn);RS0016;RS0017</NoWarn>
      </PropertyGroup>
    </When>

    <Otherwise>
      <PropertyGroup>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <!--
        <WarningsNotAsErrors>$(WarningsNotAsErrors);CS1591</WarningsNotAsErrors>
        <NoWarnCS1591>false</NoWarnCS1591>
        -->
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <!--
    SourceLink? Does it require the customer to change a few VS settings.

    TODO: pack.ps1 /p:Freeze=true,
          Deterministic meaning in relation w/
            InformationalVersion/FileVersion/...  in Retail.props,
          RepositoryCommit/Branch
    References
    - https://github.com/dotnet/sourcelink/tree/master/docs
    - https://github.com/clairernovotny/DeterministicBuilds
    - https://github.com/NuGet/Home/issues/4142
    - https://blog.paranoidcoding.com/2016/04/05/deterministic-builds-in-roslyn.html

    Remove tmp fix for https://github.com/dotnet/sourcelink/issues/572
    when we reach .NET Core version 3.1.300.

  <PropertyGroup>
    <Deterministic>true</Deterministic>
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
    <TargetFrameworkMonikerAssemblyAttributesPath>$([System.IO.Path]::Combine('$(IntermediateOutputPath)','$(TargetFrameworkMoniker).AssemblyAttributes$(DefaultLanguageSourceExtension)'))</TargetFrameworkMonikerAssemblyAttributesPath>
  </PropertyGroup>
  <ItemGroup>
    <EmbeddedFiles Include="$(GeneratedAssemblyInfoFile)"/>
  </ItemGroup>
  -->
  <!--
    Embedded or pdbonly?
    Embedded seems to work all the time (apparently there are situations
    where a separate pdb can cause problems); one drawback is the increased
    size of the dll (~8 Ko).

    References
    - https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/compiler-options/debug-compiler-option
    - https://docs.microsoft.com/en-us/dotnet/framework/debug-trace-profile/making-an-image-easier-to-debug
  -->
  <PropertyGroup Condition=" $(Retail) == 'true' ">
    <!-- *** BE VERY, VERY CAREFUL, BEFORE CHANGING THIS ***
      What we really want is sketched here but it does NOT work since
      "TargetFrameworkIdentifier" is not yet set. A good place where to put this
      would be Directory.Build.targets, but it is too late according to this issue
      https://github.com/Microsoft/msbuild/issues/2754.
        <DebugType Condition=" $(TargetFrameworkIdentifier) == '.NETFramework' ">pdbonly</DebugType>
        <DebugType Condition=" $(TargetFrameworkIdentifier) != '.NETFramework' ">embedded</DebugType>
    -->
    <DebugType>embedded</DebugType>
    <DebugType Condition=" $(TargetFramework.StartsWith('net4')) ">pdbonly</DebugType>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
  </PropertyGroup>

  <!-- Define the public API -->
  <ItemGroup>
    <AdditionalFiles Include="PublicAPI\$(ApiProfileMoniker)\PublicAPI.Shipped.txt" />
    <AdditionalFiles Include="PublicAPI\$(ApiProfileMoniker)\PublicAPI.Unshipped.txt" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.PublicApiAnalyzers" Version="3.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <!--<PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0" PrivateAssets="All" />-->
  </ItemGroup>

</Project>
