<Project>

  <Import Project="$(MSBuildThisFileDirectory)..\Directory.Build.targets" />

  <PropertyGroup Condition=" $(Pack) == 'true' ">
    <!--
      Even if the following props are already set with the right value, we
      override them here to be crystal about what to expect.
      Packages are actually only created for Abc.Maybe but, if we wish to compile
      the whole solution, we must be careful for instance w/ HideInternals.
    -->
    <SignAssembly>true</SignAssembly>
    <CheckForOverflowUnderflow>false</CheckForOverflowUnderflow>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <HideInternals>true</HideInternals>
  </PropertyGroup>

  <PropertyGroup>
    <!-- CONTRACTS_FULL is necessary to enable the attribute Pure -->
    <DefineConstants>$(DefineConstants);CONTRACTS_FULL</DefineConstants>

    <DefineConstants Condition=" $(SignAssembly) == 'true' ">$(DefineConstants);SIGNED_ASSEMBLY</DefineConstants>
    <DefineConstants Condition=" $(HideInternals) != 'true' ">$(DefineConstants);INTERNALS_VISIBLE_TO</DefineConstants>
    <DefineConstants Condition=" $(PatchEquality) == 'true' ">$(DefineConstants);PATCH_EQUALITY</DefineConstants>

    <DefineConstants Condition=" $(TargetFramework) == 'netstandard2.1' ">$(DefineConstants);API_PROFILE_21</DefineConstants>
    <DefineConstants Condition=" $(TargetFramework) == $(MaxApiPlatform) ">$(DefineConstants);API_PROFILE_21</DefineConstants>

    <!--<DefineConstants>$(DefineConstants);PLAIN_LINQ</DefineConstants>-->
    <!--<DefineConstants>$(DefineConstants);PURE_MAYBE</DefineConstants>-->
  </PropertyGroup>

  <PropertyGroup Condition=" $(Configuration) == 'Release' ">
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
  </PropertyGroup>

  <PropertyGroup Condition=" $(Configuration) == 'Debug' ">
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    <TreatSpecificWarningsAsErrors />

    <!--
      RS0016  Symbol XXX is not part of the declared API
      RS0017  Symbol XXX is part of the declared API, but is either not public
              or could not be found
    -->
    <NoWarn>$(NoWarn);RS0016;RS0017</NoWarn>
  </PropertyGroup>

  <PropertyGroup>
    <!--
      CA1034  Nested types should not be visible
      CA1303  Do not pass literals as localized parameters
      CA1707  Identifiers should not contain underscores
      CA2007  Consider calling ConfigureAwait on the awaited task
      CS1591  Missing XML comment for publicly visible type or member 'Type_or_Member'
    -->
    <NoWarn Condition=" $(RelaxWarnings) == 'true' ">$(NoWarn);CA1034;CA1303;CA1707</NoWarn>
    <NoWarn Condition=" $(RelaxAsyncWarnings) == 'true' ">$(NoWarn);CA2007</NoWarn>
    <NoWarn Condition=" $(GenerateDocumentationFile) == 'true' ">$(NoWarn);CS1591</NoWarn>

    <!-- Maybe, append a custom list of excluded rules (scripts) -->
    <NoWarn>$(NoWarn);$(NoWarnX)</NoWarn>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.FxCopAnalyzers" Version="3.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <Target Name="__PrintSettings" BeforeTargets="Compile"
          Condition=" $(PrintSettings) == 'true' and $(TargetFramework) != '' ">
    <PropertyGroup>
      <_MyMessage Condition="  $(HideInternals) == 'true' ">| will hide its internals.</_MyMessage>
      <_MyMessage Condition="  $(HideInternals) != 'true' ">| will NOT hide its internals.</_MyMessage>

      <_MyMessage Condition="  $(CheckForOverflowUnderflow) == 'true' ">$(_MyMessage)%0A| will use checked arithmetic.</_MyMessage>
      <_MyMessage Condition="  $(CheckForOverflowUnderflow) != 'true' ">$(_MyMessage)%0A| will NOT use checked arithmetic.</_MyMessage>

      <_MyMessage Condition="  $(PatchEquality) == 'true' ">$(_MyMessage)%0A| will use patched equality.</_MyMessage>

      <_MyMessage>$(_MyMessage)%0A| %24(DefineConstants) = "$(DefineConstants)"</_MyMessage>
      <_MyMessage>$(_MyMessage)%0A| %24(DebugType) = "$(DebugType)"</_MyMessage>
      <_MyMessage>$(_MyMessage)%0A| %24(NoWarn) = "$(NoWarn)"</_MyMessage>
    </PropertyGroup>

    <Message Text="+ $(AssemblyName) for $(TargetFramework)%0A$(_MyMessage)" Importance="high" />
  </Target>

</Project>
